{"ast":null,"code":"var _jsxFileName = \"D:\\\\tnfrontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const toggleChatbot = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSendMessage = () => {\n    if (input.trim()) {\n      setMessages([...messages, {\n        sender: 'user',\n        text: input\n      }]);\n      setInput('');\n      // Simulate a bot response\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: 'bot',\n          text: 'Xin chào! Tôi có thể giúp gì cho bạn?'\n        }]);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: '20px',\n      right: '20px',\n      zIndex: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleChatbot,\n      style: {\n        padding: '10px 20px',\n        cursor: 'pointer'\n      },\n      children: isOpen ? 'Đóng Chatbot' : 'Mở Chatbot'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        height: '400px',\n        backgroundColor: 'white',\n        border: '1px solid #ddd',\n        borderRadius: '8px',\n        display: 'flex',\n        flexDirection: 'column',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          padding: '10px',\n          overflowY: 'auto'\n        },\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: msg.sender === 'user' ? 'right' : 'left',\n            margin: '5px 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'inline-block',\n              padding: '8px 12px',\n              borderRadius: '12px',\n              backgroundColor: msg.sender === 'user' ? '#007bff' : '#f1f1f1',\n              color: msg.sender === 'user' ? 'white' : 'black'\n            },\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          borderTop: '1px solid #ddd'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          style: {\n            flex: 1,\n            padding: '10px',\n            border: 'none',\n            outline: 'none'\n          },\n          placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          style: {\n            padding: '10px',\n            cursor: 'pointer'\n          },\n          children: \"G\\u1EEDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"Gh4s1GdJuG5uIMQtVEZqGMQgaRI=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","input","setInput","toggleChatbot","handleSendMessage","trim","sender","text","setTimeout","prevMessages","style","position","bottom","right","zIndex","children","onClick","padding","cursor","fileName","_jsxFileName","lineNumber","columnNumber","width","height","backgroundColor","border","borderRadius","display","flexDirection","boxShadow","flex","overflowY","map","msg","index","textAlign","margin","color","borderTop","type","value","onChange","e","target","outline","placeholder","_c","$RefreshReg$"],"sources":["D:/tnfrontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Chatbot = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n\r\n    const toggleChatbot = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (input.trim()) {\r\n            setMessages([...messages, { sender: 'user', text: input }]);\r\n            setInput('');\r\n            // Simulate a bot response\r\n            setTimeout(() => {\r\n                setMessages((prevMessages) => [\r\n                    ...prevMessages,\r\n                    { sender: 'bot', text: 'Xin chào! Tôi có thể giúp gì cho bạn?' },\r\n                ]);\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ position: 'fixed', bottom: '20px', right: '20px', zIndex: 1000 }}>\r\n            <button onClick={toggleChatbot} style={{ padding: '10px 20px', cursor: 'pointer' }}>\r\n                {isOpen ? 'Đóng Chatbot' : 'Mở Chatbot'}\r\n            </button>\r\n            {isOpen && (\r\n                <div\r\n                    style={{\r\n                        width: '300px',\r\n                        height: '400px',\r\n                        backgroundColor: 'white',\r\n                        border: '1px solid #ddd',\r\n                        borderRadius: '8px',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                    }}\r\n                >\r\n                    <div style={{ flex: 1, padding: '10px', overflowY: 'auto' }}>\r\n                        {messages.map((msg, index) => (\r\n                            <div\r\n                                key={index}\r\n                                style={{\r\n                                    textAlign: msg.sender === 'user' ? 'right' : 'left',\r\n                                    margin: '5px 0',\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    style={{\r\n                                        display: 'inline-block',\r\n                                        padding: '8px 12px',\r\n                                        borderRadius: '12px',\r\n                                        backgroundColor: msg.sender === 'user' ? '#007bff' : '#f1f1f1',\r\n                                        color: msg.sender === 'user' ? 'white' : 'black',\r\n                                    }}\r\n                                >\r\n                                    {msg.text}\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div style={{ display: 'flex', borderTop: '1px solid #ddd' }}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={input}\r\n                            onChange={(e) => setInput(e.target.value)}\r\n                            style={{ flex: 1, padding: '10px', border: 'none', outline: 'none' }}\r\n                            placeholder=\"Nhập tin nhắn...\"\r\n                        />\r\n                        <button onClick={handleSendMessage} style={{ padding: '10px', cursor: 'pointer' }}>\r\n                            Gửi\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}